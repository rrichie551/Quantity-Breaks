<style>
  .volumeDiscountOffer{
    cursor: pointer;
    transition: all 0.4s ease;
  }
</style>
<script>
var curr = {{ shop.currency | json }};
  var formatF = {{ shop.money_format | json }};

function formatMoney(cents, format) {
  if (typeof cents === 'string') cents = cents.replace('.', '');
  var value = '';
  var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
  var formatString = format || formatF;

  function defaultOption(opt, def) {
    return (typeof opt == 'undefined' ? def : opt);
  }

  function formatWithDelimiters(number, precision, thousands, decimal) {
    precision = defaultOption(precision, 2);
    thousands = defaultOption(thousands, ',');
    decimal = defaultOption(decimal, '.');

    if (isNaN(number) || number == null) { return 0; }

    number = (number/100.0).toFixed(precision);

    var parts = number.split('.'),
        dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
        cents = parts[1] ? (decimal + parts[1]) : '';

    return dollars + cents;
  }

  switch(formatString.match(placeholderRegex)[1]) {
    case 'amount':
      value = formatWithDelimiters(cents, 2);
      break;
    case 'amount_no_decimals':
      value = formatWithDelimiters(cents, 0);
      break;
    case 'amount_with_comma_separator':
      value = formatWithDelimiters(cents, 2, '.', ',');
      break;
    case 'amount_no_decimals_with_comma_separator':
      value = formatWithDelimiters(cents, 0, '.', ',');
      break;
  }

  return formatString.replace(placeholderRegex, value);
}
const basePriceBase = {{ product.variants[0].price }};
  function OptionsBundle() {
    const base = '{{ shop.url }}'
    const baseUrl = `${base}/apps/quantityBreaks`;



    fetch(baseUrl,{
      method:'GET',
      redirect: 'manual',
      headers:{
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*',
        'ngrok-skip-browser-warning': '69420'
      }
      }).then(res => res.json()).then(x =>{
        const result = x.message.volumes;
        
       
      result.map((volume)=>{
        
        volume.selections.map((selection)=>{
          if(selection.id.replace('gid://shopify/Product/','') === '{{ product.id }}'){
            document.querySelectorAll('.product-form__quantity').forEach(form => {
              form.style.display = 'none';
            });
            document.querySelectorAll('shopify-accelerated-checkout').forEach(form => {
              form.style.display = 'none';
            });
            document.querySelectorAll('quantity-input').forEach(form => {
              form.style.display = 'none';
            });
            if(volume.settings.allowVariants){
            document.querySelectorAll('variant-selects').forEach(form =>{
              form.style.display = 'none';
            })
            }
            const forms = document.querySelectorAll('form[action="/cart/add"]');
            const firstForm = forms[forms.length - 1];
            if (firstForm) {
              // Add optionsBundle to only the first form
              const bundleOptions = document.createElement('div');
              bundleOptions.id = 'volumeDiscount';
              bundleOptions.className = 'options-bundle-products';
              firstForm.insertBefore(bundleOptions, firstForm.firstChild);
            }
  
          }

        })
       
      })
      return result;
    }).then((result)=>{
        result.map((volume)=>{
          volume.selections.map((selection)=>{
            if(selection.id.replace('gid://shopify/Product/','') === '{{ product.id }}'){
                  function createVolumeDiscount(data, targetSelector) {

                      function calculateDiscountedPrice(offer, originalPrice) {
                        const ogPrice = formatMoney(originalPrice, {{ shop.money_format | json }}).replace(/[^0-9.]/g, '');
                        let basePrice = ogPrice;
                        if(!data.settings.showUnitPrice){
                         basePrice = offer.quantity * ogPrice;
                        }

                        
                        switch (offer.discountType) {
                          case 'percentage':
                            return (basePrice - (basePrice * (parseFloat(offer.discountValue) / 100)))*100;
                          case 'flat':
                            return (basePrice - parseFloat(offer.discountValue))*100;
                          case 'flat-per-item':
                            return (basePrice - (parseFloat(offer.discountValue) * offer.quantity))*100;
                          case 'fixed':
                            return (parseFloat(offer.discountValue) * offer.quantity)*100;
                          default:
                            return basePrice*100;
                        }
                      }

                    // Create main container
                    const container = document.createElement('div');
                    container.style.backgroundColor = 'transparent';
                    container.style.padding = '20px 0 20px 0';

                    // Add block title
                    const title = document.createElement('span');
                    title.style.color = data.blockTitleColor;
                    if(data.blockTitleStyle === 'italic'){
                    title.style.fontStyle = data.blockTitleStyle;
                    }
                    else{
                      title.style.fontWeight = data.blockTitleStyle;
                    }
                    title.style.textAlign = 'center';
                    title.style.display = 'block';
                    title.style.marginBottom = '20px';
                    title.style.fontSize = `${data.blockTitleSize}px`;
                    title.textContent = data.blockTitle || 'Bundle & Save';
                    container.appendChild(title);

                    // Create offers container
                    const offersContainer = document.createElement('div');
                    offersContainer.style.display = 'flex';
                    offersContainer.style.flexDirection = data.layout === 'vertical' ? 'column' : 'row';
                    offersContainer.style.gap = '15px';

                    // Add offers
                    data.offers.forEach(offer => {
                      if (offer.active) {
                        document.querySelectorAll('form[action="/cart/add"]').forEach(form => {
                          const quantityInput = document.createElement('input');
                          quantityInput.type = 'hidden';
                          quantityInput.className = "pfQuantity";
                          quantityInput.name = 'quantity';
                          quantityInput.value = offer.quantity;
                          form.insertBefore(quantityInput, form.firstChild);
                        });
                        document.querySelectorAll('form[action="/cart/add"]').forEach(form => {
                          const quantityInput = document.createElement('input');
                          quantityInput.type = 'hidden';
                          quantityInput.name = 'properties[__discountTypePf]';
                          quantityInput.className = 'discountTypePf';
                          quantityInput.value = "Volume Discount";
                          form.insertBefore(quantityInput, form.firstChild);
                        });
                        document.querySelectorAll('form[action="/cart/add"]').forEach(form => {
                          const quantityInput = document.createElement('input');
                          quantityInput.type = 'hidden';
                          quantityInput.name = 'properties[__discountValue]';
                          quantityInput.className = 'discountValue';
                          quantityInput.value = formatMoney(offer.quantity * data.selections[0].price > 0 ? offer.quantity * basePriceBase : basePriceBase, {{ shop.money_format | json }}).replace(/[^0-9.]/g, '') - formatMoney(calculateDiscountedPrice(offer, basePriceBase) > 0 ? calculateDiscountedPrice(offer, basePriceBase) : basePriceBase, {{ shop.money_format | json }}).replace(/[^0-9.]/g, '');
                          form.insertBefore(quantityInput, form.firstChild);
                        });
                      }
                      const offerDiv = document.createElement('div');
                      offerDiv.style.display = 'flex';
                      offerDiv.style.flexDirection = 'column';
                      offerDiv.className = "volumeDiscountOffer"
                      offerDiv.style.alignItems = 'center';
                      offerDiv.style.width = data.layout === 'vertical' ? "100%": "33.33%";
                      offerDiv.dataset.quantity = offer.quantity;
                      offerDiv.dataset.discountLabel = offer.discountLabel;
                      offerDiv.dataset.discountValue = `${formatMoney(offer.quantity * data.selections[0].price > 0 ? offer.quantity * basePriceBase : basePriceBase, {{ shop.money_format | json }}).replace(/[^0-9.]/g, '') - formatMoney(calculateDiscountedPrice(offer, basePriceBase) > 0 ? calculateDiscountedPrice(offer, basePriceBase) : basePriceBase, {{ shop.money_format | json }}).replace(/[^0-9.]/g, '')}`;
                      offerDiv.dataset.actualValue = formatMoney(calculateDiscountedPrice(offer, basePriceBase) > 0 ? calculateDiscountedPrice(offer, basePriceBase) : basePriceBase, {{ shop.money_format | json }}).replace(/[^0-9.]/g, '');
                      offerDiv.style.padding = '15px';
                      offerDiv.style.border = `${data.borderWidth}px solid ${offer.active ? data.optionBorderColor : '#ddd'}`;
                      offerDiv.style.borderRadius = `${data.borderRadius}px`;
                      offerDiv.style.position = 'relative';
                      offerDiv.style.backgroundColor = offer.active ? data.optionBackgroundColor : data.optionNonSelectedBackgroundColor;

                      // Add radio button
                      const offerDivInner = document.createElement('div');
                      offerDivInner.style.display = 'flex';
                      offerDivInner.style.flexDirection = data.layout === 'vertical' ? 'row' : 'column';
                      offerDivInner.style.alignItems = 'center';
                      offerDivInner.style.width = '100%';
                      offerDivInner.style.gap = data.layout === 'vertical' ? '0px': '10px';
                      const radio = document.createElement('div');
                      radio.style.width = '17px';
                      radio.style.height = '16px';
                      radio.className = "volumeDiscountRadio"
                      radio.style.borderRadius = '50%';
                      radio.style.border = `2px solid ${offer.active ? data.optionBorderColor : 'grey'}`;
                      radio.style.margin = data.layout === 'vertical' ? '0': '0 auto';
                      radio.style.marginRight = data.layout === 'vertical' ? '15px': 'auto';
                      radio.style.display = 'flex';
                      radio.style.alignItems = 'center';
                      radio.style.justifyContent = 'center';

                      const radioInner = document.createElement('div');
                      radioInner.style.width = '7px';
                      radioInner.style.height = '7px';
                      radioInner.className = "volumeDiscountRadioInner"
                      radioInner.style.borderRadius = '50%';
                      radioInner.style.display = 'block';
                      radioInner.style.backgroundColor = offer.active ? data.optionBorderColor : 'transparent';
                      radio.appendChild(radioInner);
                      offerDivInner.appendChild(radio);

                      // Add offer content
                      const content = document.createElement('div');
                      content.style.display = 'flex';
                      content.style.alignItems = 'center';
                      content.style.gap = '10px';
                      content.style.flexDirection = data.layout === 'vertical' ? 'row' : 'column';
                      content.style.justifyContent = 'space-between';
                      content.style.width = '100%';

                      // Left side (title and prices)
                      const leftSide = document.createElement('span');
                      leftSide.style.display = 'flex';
                      leftSide.style.flexDirection = 'column';
                      leftSide.style.alignItems = data.layout === 'vertical' ? 'start' : 'center';
                      leftSide.style.gap = data.layout === 'vertical' ? '0px': '5px';
                      leftSide.style.fontSize = `${data.offerTitleSize}px`;
                      leftSide.style.color = data.offerTitleColor;
                      if(data.offerTitleStyle === 'italic'){
                        leftSide.style.fontStyle = data.offerTitleStyle;
                      }
                      else{
                        leftSide.style.fontWeight = data.offerTitleStyle;
                      }

                      leftSide.innerHTML = `
                        ${offer.offerTitle || `Buy ${offer.quantity}`}<br/>
                        <span style="font-size: ${data.priceTitleSize}px; color: ${data.priceTitleColor}; font-style: ${data.priceTitleStyle}; line-height: 120%">
                          ${formatMoney(calculateDiscountedPrice(offer, basePriceBase) > 0 ? calculateDiscountedPrice(offer, basePriceBase) : basePriceBase, {{ shop.money_format | json }})} <span style="font-size:8px">${data.settings.showUnitPrice && data.settings.unitPriceLabel}</span>
                        </span>
                        ${offer.discountValue && data.settings.showComparePrice && offer.discountValue > 0 ? `
                          <span style="font-size: ${data.cpriceTitleSize}px; color: ${data.cpriceTitleColor}; font-style: ${data.cpriceTitleStyle}; line-height: 120%; text-decoration: line-through">
                          ${formatMoney(offer.quantity * data.selections[0].price > 0 ? offer.quantity * basePriceBase : basePriceBase, {{ shop.money_format | json }})}
                          </span>
                        ` : ''}
                      `;

                      // Right side (tag and discount label)
                      const rightSide = document.createElement('div');
                      rightSide.style.display = 'flex';
                      rightSide.style.flexDirection = 'column';
                      rightSide.style.alignItems = 'center';

                      if (offer.tag) {
                        const tag = document.createElement('div');
                        tag.style.backgroundColor = data.tagBackgroundColor;
                        tag.style.color = data.tagTitleColor;
                        tag.style.padding = '2px 4px';
                        tag.style.lineHeight = '10px';
                        tag.style.borderRadius = '4px';
                        tag.style.fontSize = `${data.tagTitleSize}px`;
                        if(data.tagTitleStyle === 'italic'){
                          tag.style.fontStyle = data.tagTitleStyle;
                        }
                        else{
                          tag.style.fontWeight = data.tagTitleStyle;
                        }
                        tag.textContent = offer.tag;
                        rightSide.appendChild(tag);
                      }

                      if (offer.discountLabel) {
                        const discountLabel = document.createElement('span');
                        discountLabel.style.fontSize = `${data.discountLabelSize}px`;
                        discountLabel.style.color = data.discountLabelColor;
                        if(data.discountLabelStyle === 'italic'){
                          discountLabel.style.fontStyle = data.discountLabelStyle;
                        }
                        else{
                          discountLabel.style.fontWeight = data.discountLabelStyle;
                        }
                        discountLabel.textContent = offer.discountLabel;
                        rightSide.appendChild(discountLabel);
                      }

                      content.appendChild(leftSide);
                      content.appendChild(rightSide);
                      offerDivInner.appendChild(content)
                      offerDiv.appendChild(offerDivInner);
                      // Add after content.appendChild(rightSide);
                        if (data.settings.allowVariants && 
                            data.applyTo === 'PRODUCTS' && 
                            data.selections[0].options?.length > 0 && 
                            offer.quantity && 
                            parseInt(offer.quantity) > 0 && 
                            data.layout === 'vertical') {

                          const variantsContainer = document.createElement('div');
                          const variantsList = document.createElement('ul');
                          variantsList.style.fontSize = '12px';
                          variantsList.style.listStyle = 'decimal';
                          variantsList.style.margin = '0px';
                          variantsContainer.style.width = '100%';
                          variantsContainer.style.marginTop = '10px';
                         

                          // Create options for each quantity
                          for (let i = 0; i < parseInt(offer.quantity); i++) {
                            const variantRow = document.createElement('div');
                            const variantli= document.createElement('li');
                            variantRow.style.display = 'flex';
                            variantRow.style.gap = '8px';
                            variantRow.style.padding = '4px 0';
                            variantRow.style.position = 'relative';
                            variantRow.style.paddingLeft = '0px';
                            variantRow.classList.add('variant-item');
                            
                            // Add counter style
                           

                            // Create select for each option
                            data.selections[0].options.forEach(option => {
                              const select = document.createElement('select');
                              select.style.padding = '3px';
                              select.style.borderRadius = '4px';
                              select.style.fontSize = '12px';
                              select.style.border = '1px solid #d9d9d9';
                              select.style.backgroundColor = '#fff';
                              select.style.color = '#000';
                              select.style.flex = '1';

                              option.values.forEach(value => {
                                const optionElement = document.createElement('option');
                                optionElement.value = value;
                                optionElement.textContent = value;
                                select.appendChild(optionElement);
                              });

                              variantRow.appendChild(select);
                            });

                            variantli.appendChild(variantRow);
                            variantsList.appendChild(variantli);
                          }
                          variantsContainer.appendChild(variantsList);
                          offerDiv.appendChild(variantsContainer);
                        }
                      offersContainer.appendChild(offerDiv);
                    });

                    container.appendChild(offersContainer);

                    // Add footer if exists
                    if (data.footerText1 || data.footerText2) {
                      const footer = document.createElement('div');
                      footer.style.marginTop = '20px';
                      footer.style.textAlign = 'center';
                      footer.style.display = 'flex';
                      footer.style.alignItems = 'center';
                      footer.style.justifyContent = 'space-between';

                      if (data.footerText1) {
                        const footerText1 = document.createElement('span');
                        footerText1.style.fontSize = `${data.footerTitleSize}px`;
                        footerText1.style.color = data.footerTitleColor;
                        if(data.footerTitleStyle === 'italic'){
                          footerText1.style.fontStyle = data.footerTitleStyle;
                        }
                        else{
                          footerText1.style.fontWeight = data.footerTitleStyle;
                        }
                        footerText1.textContent = data.footerText1;
                        footer.appendChild(footerText1);
                      }

                      if (data.footerText2) {
                        const footerText2 = document.createElement('span');
                        footerText2.style.fontSize = `${data.footerTitleSize}px`;
                        footerText2.style.color = data.footerTitleColor;
                        if(data.footerTitleStyle === 'italic'){
                          footerText2.style.fontStyle = data.footerTitleStyle;
                        }
                        else{
                          footerText2.style.fontWeight = data.footerTitleStyle;
                        }
                        const activeOffer = data.offers.find(offer => offer.active);
                        footerText2.innerHTML = `${data.footerText2} <span class="discount-footer-text-value">${formatMoney(calculateDiscountedPrice(activeOffer, basePriceBase) > 0 ? calculateDiscountedPrice(activeOffer, basePriceBase) : basePriceBase, {{ shop.money_format | json }})}</span>`;
                        footer.appendChild(footerText2);
                      }

                      container.appendChild(footer);
                    }

                    // Insert into target element
                    const targetElement = document.querySelector(targetSelector);
                    if (targetElement) {
                      targetElement.appendChild(container);
                    }
              }
              createVolumeDiscount(volume, '#volumeDiscount');
            }
          });
        });
        return result;
      }).then((result)=>{
        result.map((volume)=>{
          volume.selections.map((selection)=>{
            if(selection.id.replace('gid://shopify/Product/','') === '{{ product.id }}'){
              document.querySelectorAll('.volumeDiscountOffer').forEach((e)=>{
                e.addEventListener('click',()=>{
                  document.querySelectorAll('.volumeDiscountOffer').forEach((f)=>{
                  f.style.border =`${volume.borderWidth}px solid #ddd`;
                  f.style.backgroundColor = volume.optionNonSelectedBackgroundColor;
                  f.querySelector('.volumeDiscountRadio').style.border =`2px solid grey`;
                  f.querySelector('.volumeDiscountRadioInner').style.backgroundColor =`transparent`;
                })
                const selectedQuantity = e.dataset.quantity;
                const selectedDiscountValue = e.dataset.discountValue;
                const actualValue = e.dataset.actualValue;
                
                  
                  // Update all quantity inputs in forms
                  document.querySelectorAll('.pfQuantity').forEach(input => {
                    input.value = selectedQuantity;
                  });
                  
                  document.querySelectorAll('.discountValue').forEach(input => {
                    input.value = selectedDiscountValue;
                  });
                  document.querySelector('.discount-footer-text-value').textContent = formatMoney(actualValue*100, {{ shop.money_format | json }});
                  e.style.border = `${volume.borderWidth}px solid ${volume.optionBorderColor}`;
                  e.style.backgroundColor = volume.optionBackgroundColor;
                  e.querySelector('.volumeDiscountRadio').style.border = `2px solid ${volume.optionBorderColor}`;
                  e.querySelector('.volumeDiscountRadioInner').style.backgroundColor = `${volume.optionBorderColor}`;
                });
            });
            }
          });
        });
      });
  }

document.addEventListener("DOMContentLoaded", OptionsBundle);
</script>

{% if section.settings.custom_css != blank %}
  <style type="text/css">
      {{ section.settings.custom_css }}
  </style>
  {% endif %}

  {% if section.settings.custom_js != blank %}
  <script type="text/javascript">
      {{ section.settings.custom_js }}
  </script>
  {% endif %}

{% schema %}
    {
      "name": "Volume Discount",
      "target": "body",
      "templates": ["product"],
      "settings": [
        {
          "type": "select",
          "id": "option_display",
          "label": "Option Display Style",
          "options": [
            {
              "value": "dropdown",
              "label": "Dropdown"
            },
            {
              "value": "pills",
              "label": "Pills"
            }
          ],
          "default": "dropdown"
        },
        {
      "type": "textarea",
      "id": "custom_css",
      "label": "Custom CSS",
      "info": "Add your custom CSS here."
    },
    {
      "type": "textarea",
      "id": "custom_js",
      "label": "Custom JavaScript",
      "info": "Add your custom JavaScript here."
    }
      ]
    }
{% endschema %}